@startuml
'https://plantuml.com/class-diagram

interface Loader {
	Load(ctx context.Context, fp string, opts...Option) (Config, error)
}

class loader {
	opts options
	config config

	Load(ctx context.Context, fp string, opts...Option) (Config, error)
	load(ctx context.Context, fp string, options) (Config, error)
	reload(ctx context.Context, fp string, options) error
}
loader -up-|> Loader

loader -down-> options
'loader -right-> Provider
'loader -down-> Decoder
loader -left-> Config

class options {
	fp string
	reload bool
	decoder  Decoder
   	provider Provider
}

options -left-> Decoder
options -> Provider

interface Provider {
	Watcher
	Name() string
	Load(ctx context.Context, fp string, event) ([]byte, error)
}

Provider -up-> Watcher

ConsulProvider -up-|> Provider
ZooKeeperProvider -up-|> Provider
FilesystemProvider -up-|> Provider

interface Watcher {
	Watch(ctx context.Context, fp string) (<-chan Event, error)
}

Watcher -up-> Event

class Event {
	typ  EventType
	meta interface{}
}
Event -right-> EventType

enum EventType {
	Update
	Delete
}

interface Decoder {
	Decode(dat []byte, val interface{}) error
}
Decoder ..left. DecodeType: 1:1

enum DecodeType {
	YAML
	JSON
	INI
}

YAMLDecoder -up-|> Decoder
JSONDecoder -up-|> Decoder
INIDecoder -up-|> Decoder

interface Config {
	Read(name string, dftValue string) string
   	ReadInt(name string, dftValue int) int
   	ReadBool(key string, dftValue bool) bool
}

class config {
   	value atomic.Value
   	opts  options
}
config -down-|> Config


@enduml